GTCEuStartupEvents.registry('gtceu:recipe_type', event => {
	event.create('fission')
		.category('multiblock')
		.setMaxIOSize(3, 3, 3, 3)
		.setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
		.setSound(GTSoundEntries.ARC);
});

GTCEuStartupEvents.registry('gtceu:machine', event => {

	event.create('fission_reactor', 'multiblock')
		.rotationState(RotationState.NON_Y_AXIS)
		.generator(true)
		.recipeType('fission')
		.appearanceBlock(() => Block.getBlock('kubejs:radiation_resistant_casing'))
		.pattern(definition => FactoryBlockPattern.start()
			.aisle('               ','      RRR      ','               ')
			.aisle('      RRR      ','    ##FFF##    ','      RRR      ')
			.aisle('    ##   ##    ','   RFFRRRFFR   ','    ##   ##    ')
			.aisle('   R       R   ','  RF##   ##FR  ','   R       R   ')
			.aisle('  #         #  ',' #F#A     A#F# ','  #         #  ')
			.aisle('  #         #  ',' #F# A   A #F# ','  #         #  ')
			.aisle(' R     T     R ','RFR   TVT   RFR',' R     T     R ')
			.aisle(' R    TTT    R ','RFR   VFV   RFR',' R    TCT    R ')
			.aisle(' R     T     R ','RFR   TVT   RFR',' R     T     R ')
			.aisle('  #         #  ',' #F# A   A #F# ','  #         #  ')
			.aisle('  #         #  ',' #F#A     A#F# ','  #         #  ')
			.aisle('   R       R   ','  RF##   ##FR  ','   R       R   ')
			.aisle('    ##   ##    ','   RFFRRRFFR   ','    ##   ##    ')
			.aisle('      RRR      ','    ##FFF##    ','      RRR      ')
			.aisle('               ','      RRR      ','               ')
			.where('C', Predicates.controller(Predicates.blocks(definition.get())))
			.where('#', Predicates.blocks('kubejs:radiation_resistant_casing')
				.or(Predicates.abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(2).setPreviewCount(1))
                .or(Predicates.abilities(PartAbility.IMPORT_FLUIDS).setMaxGlobalLimited(2).setPreviewCount(1))
				.or(Predicates.abilities(PartAbility.EXPORT_ITEMS).setMaxGlobalLimited(2).setPreviewCount(1))
                .or(Predicates.abilities(PartAbility.EXPORT_FLUIDS).setMaxGlobalLimited(2).setPreviewCount(1))
				.or(Predicates.abilities(PartAbility.OUTPUT_ENERGY).setMaxGlobalLimited(2).setPreviewCount(1)))
			.where('T', Predicates.blocks('kubejs:radiation_resistant_casing')
				.or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1).setPreviewCount(1)))
			.where('V', Predicates.abilities(PartAbility.MUFFLER))
            .where('F', Predicates.blocks('kubejs:fission_reactor_rod'))
			.where('R', Predicates.blocks('kubejs:containment_coil'))
			.where('A', Predicates.blocks('gtceu:stainless_steel_frame'))
			.where(' ', Predicates.any())
			.build())	
		.workableCasingModel("kubejs:block/casings/radiation_resistant/radiation_resistant_casing", "kubejs:block/multiblock/ring")
});
