GTCEuStartupEvents.registry('gtceu:recipe_type', event => {
	event.create('star_forge')
		.category('multiblock')
		.setMaxIOSize(9, 3, 3, 1)
		.setProgressBar(GuiTextures.PROGRESS_BAR_ARROW_MULTIPLE, FillDirection.LEFT_TO_RIGHT)
		.setSound(GTSoundEntries.ARC);
});

GTCEuStartupEvents.registry('gtceu:machine', event => {
	event.create('star_forge', 'multiblock')
		.rotationState(RotationState.NON_Y_AXIS)
		.recipeType('star_forge')
        .recipeModifiers([GTRecipeModifiers.OC_PERFECT_SUBTICK])
		.appearanceBlock(() => Block.getBlock('kubejs:hss_plated_nocturium_casing'))
		.pattern(definition => FactoryBlockPattern.start()
			.aisle("  ###  "," EGGGE ","#GGGGG#","#GGGGG#","#GGGGG#"," EGGGE ","  ###  ")
            .aisle(" EGGGE ","EPOOOPE","GO   OG","GO   OG","GO   OG","EPOOOPE"," EGGGE ")
            .aisle("#GGGGG#","GO   OG","G  1  G","G 111 G","G  1  G","GO   OG","#GGGGG#")
            .aisle("#GGGGG#","GO   OG","G 111 G","G 121 G","G 111 G","GO   OG","#GGGGG#")
            .aisle("#GGGGG#","GO   OG","G  1  G","G 111 G","G  1  G","GO   OG","#GGGGG#")
            .aisle(" EGGGE ","EPOOOPE","GO   OG","GO   OG","GO   OG","EPOOOPE"," EGGGE ")
            .aisle("  #C#  "," EGGGE ","#GGGGG#","#GGGGG#","#GGGGG#"," EGGGE ","  ###  ")
			.where('C', Predicates.controller(Predicates.blocks(definition.get())))
			.where('#', Predicates.blocks('kubejs:hss_plated_nocturium_casing')
				.or(Predicates.abilities(PartAbility.IMPORT_FLUIDS).setMaxGlobalLimited(3).setPreviewCount(1))
                .or(Predicates.abilities(PartAbility.EXPORT_FLUIDS).setMaxGlobalLimited(1).setPreviewCount(1))
                .or(Predicates.abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(1).setPreviewCount(1))
				.or(Predicates.abilities(PartAbility.EXPORT_ITEMS).setMaxGlobalLimited(1).setPreviewCount(1))
				.or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1).setPreviewCount(1))
				.or(Predicates.abilities(PartAbility.INPUT_ENERGY).setMaxGlobalLimited(1).setPreviewCount(1)))
            .where('G', Predicates.blocks('gtceu:laminated_glass'))
			.where('E', Predicates.blocks('gtceu:extreme_engine_intake_casing'))
            .where('P', Predicates.blocks('gtceu:tungstensteel_pipe_casing'))
            .where('O', Predicates.blocks('gtceu:molybdenum_disilicide_coil_block'))
            .where('1', Predicates.blocks('gtceu:inert_machine_casing'))
            .where('2', Predicates.blocks('gtceu:ptfe_pipe_casing'))
			.where(' ', Predicates.any())
			.build())
		.workableCasingModel("kubejs:block/casings/hss_plated_nocturium/hss_plated_nocturium_casing", "gtceu:block/multiblock/large_miner")
});
