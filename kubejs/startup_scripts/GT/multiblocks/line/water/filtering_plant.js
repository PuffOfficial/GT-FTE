GTCEuStartupEvents.registry('gtceu:recipe_type', event => {
    event.create('fluid_filtering')
        .category('multiblock')
        .setMaxIOSize(1, 3, 1, 1)
        .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
        .setSound(GTSoundEntries.ASSEMBLER);
});

GTCEuStartupEvents.registry('gtceu:machine', event => {
    event.create('fluid_filtering_plant', 'multiblock')
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeTypes(['fluid_filtering'])
        .recipeModifiers([GTRecipeModifiers.OC_PERFECT_SUBTICK])
        .appearanceBlock(() => Block.getBlock('gtceu:plascrete'))
        .pattern(definition => FactoryBlockPattern.start()
            .aisle('###', '###', '###', '###', '###')
            .aisle('###', 'GLG', 'GLG', 'GLG', '###')
            .aisle('###', 'GAG', 'GAG', 'GAG', '###')
            .aisle('###', 'GLG', 'GLG', 'GLG', '###')
            .aisle('###', '###', '#C#', '###', '###')
            .where('C', Predicates.controller(Predicates.blocks(definition.get())))
            .where('#', Predicates.blocks('gtceu:plascrete')
                .or(Predicates.abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(2).setPreviewCount(1))
                .or(Predicates.abilities(PartAbility.EXPORT_ITEMS).setMaxGlobalLimited(2).setPreviewCount(1))
                .or(Predicates.abilities(PartAbility.IMPORT_FLUIDS).setMaxGlobalLimited(2).setPreviewCount(1))
                .or(Predicates.abilities(PartAbility.EXPORT_FLUIDS).setMaxGlobalLimited(2).setPreviewCount(1))
                .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1).setPreviewCount(1))
                .or(Predicates.abilities(PartAbility.INPUT_ENERGY).setMaxGlobalLimited(1).setPreviewCount(1)))
            .where('F', Predicates.abilities(PartAbility.MUFFLER))
            .where('A', Predicates.blocks('gtceu:steel_pipe_casing'))
            .where('G', Predicates.blocks('gtceu:laminated_glass'))
            .where('L', Predicates.blocks('gtceu:sterilizing_filter_casing'))
            .where(' ', Predicates.any())
            .build())
        .workableCasingModel("gtceu:block/casings/cleanroom/plascrete", "gtceu:block/multiblock/gcym/large_sifting_funnel")
});
